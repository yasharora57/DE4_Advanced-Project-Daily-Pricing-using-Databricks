# Databricks notebook source
USE CATALOG pricing_analytics;

CREATE SCHEMA IF NOT EXISTS processrunlogs;

CREATE TABLE IF NOT EXISTS processrunlogs.DELTALAKEHOUSE_PROCESS_RUNS(
  PROCESS_NAME STRING,
  PROCESSED_FILE_TABLE_DATE DATE,
  PROCESS_STATUS STRING,
  PROCESSED_TABLE_DATETIME TIMESTAMP
)

# COMMAND ----------

USE CATALOG pricing_analytics;

CREATE SCHEMA IF NOT EXISTS bronze;

CREATE TABLE bronze.daily_pricing (
  DATE_OF_PRICING STRING,
  ROW_ID STRING,
  STATE_NAME STRING,
  MARKET_NAME STRING,
  PRODUCTGROUP_NAME STRING,
  PRODUCT_NAME STRING,
  VARIETY STRING,
  ORIGIN STRING,
  ARRIVAL_IN_TONNES STRING,
  MINIMUM_PRICE STRING,
  MAXIMUM_PRICE STRING,
  MODAL_PRICE STRING,
  source_file_load_date TIMESTAMP
)

USING csv
OPTIONS (
  'delimited',
  'header' = true)
  LOCATION 'abfss://bronze@adlsudadatalakehousedev.dfs.core.windows.net/daily-pricing'

# COMMAND ----------

USE CATALOG pricing_analytics;

CREATE SCHEMA IF NOT EXISTS silver;
DROP TABLE IF NOT EXISTS silver.daily_pricing_silver;
CREATE TABLE IF NOT EXISTS silver.daily_pricing_silver (
  DATE_OF_PRICING date,
  ROW_ID bigint,
  STATE_NAME string,
  MARKET_NAME string,
  PRODUCTGROUP_NAME string,
  PRODUCT_NAME string,
  VARIETY string,
  ORIGIN string,
  ARRIVAL_IN_TONNES decimal(18,2),
  MINIMUM_PRICE decimal(36,2),
  MAXIMUM_PRICE decimal(36,2),
  MODAL_PRICE decimal(36,2),
  source_file_load_date timestamp,
  lakehouse_inserted_date TIMESTAMP,
  lakehouse_updated_date TIMESTAMP
)

# COMMAND ----------

USE CATALOG pricing_analytics;

CREATE SCHEMA IF NOT EXISTS gold;

USE SCHEMA gold;

DROP TABLE IF  EXISTS REPORTING_DIM_DATE_GOLD; 

CREATE TABLE IF NOT EXISTS REPORTING_DIM_DATE_GOLD (
CALENDAR_DATE DATE,
DATE_ID BIGINT,
lakehouse_inserted_date TIMESTAMP,
lakehouse_updated_date TIMESTAMP
);

DROP TABLE IF  EXISTS REPORTING_DIM_STATE_GOLD; 

CREATE TABLE IF NOT EXISTS REPORTING_DIM_STATE_GOLD (
STATE_NAME STRING,
STATE_ID BIGINT,
lakehouse_inserted_date TIMESTAMP,
lakehouse_updated_date TIMESTAMP
);

DROP TABLE IF  EXISTS REPORTING_DIM_MARKET_GOLD; 

CREATE TABLE IF NOT EXISTS REPORTING_DIM_MARKET_GOLD (
MARKET_NAME STRING,
MARKET_ID BIGINT,
lakehouse_inserted_date TIMESTAMP,
lakehouse_updated_date TIMESTAMP
);

DROP TABLE IF  EXISTS REPORTING_DIM_PRODUCT_GOLD;

CREATE TABLE IF NOT EXISTS pricing_analytics.gold.reporting_dim_product_gold_SCDTYPE2 (
  PRODUCTGROUP_NAME STRING,
  PRODUCT_NAME STRING,
  PRODUCT_ID BIGINT,
  start_date TIMESTAMP,
  end_date TIMESTAMP,
  lakehouse_inserted_date TIMESTAMP,
  lakehouse_updated_date TIMESTAMP)
USING delta

DROP TABLE IF  EXISTS REPORTING_DIM_VARIETY_GOLD; 

CREATE TABLE IF NOT EXISTS REPORTING_DIM_VARIETY_GOLD (
VARIETY STRING,
VARIETY_ID BIGINT,
lakehouse_inserted_date TIMESTAMP,
lakehouse_updated_date TIMESTAMP
);

DROP TABLE IF  EXISTS REPORTING_FACT_DAILY_PRICING_GOLD; 

CREATE TABLE IF NOT EXISTS REPORTING_FACT_DAILY_PRICING_GOLD (
DATE_ID BIGINT,
STATE_ID BIGINT,
MARKET_ID BIGINT,
PRODUCT_ID BIGINT,
VARIETY_ID BIGINT,
ROW_ID BIGINT,
ARRIVAL_IN_TONNES DECIMAL(18,2),
MINIMUM_PRICE DECIMAL(36,2),
MAXIMUM_PRICE DECIMAL(36,2),
MODAL_PRICE DECIMAL(36,2),
lakehouse_inserted_date TIMESTAMP,
lakehouse_updated_date TIMESTAMP
);